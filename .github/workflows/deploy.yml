name: Deploy Multi-Lambda with Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: bg-kar-terraform-state
      LAMBDA_FUNCTIONS: lambda1,lambda2,lambda3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build and Upload Changed Lambda Packages
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          echo "üîç Detecting changed Lambda functions..."

          # Get changed files between HEAD and HEAD~1 or all files if no HEAD~1
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          else
            echo "‚ö†Ô∏è No previous commit found. Assuming all Lambdas changed."
            CHANGED_FILES=$(git ls-files)
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          IFS=',' read -ra LAMBDAS <<< "$LAMBDA_FUNCTIONS"

          for lambda in "${LAMBDAS[@]}"; do
            if echo "$CHANGED_FILES" | grep -q "^lambda-functions/${lambda}/"; then
              echo "üì¶ Changes detected for ${lambda}, building and uploading..."
              chmod +x lambda-functions/${lambda}/build.sh
              bash lambda-functions/${lambda}/build.sh
              echo "‚òÅÔ∏è Uploading ${lambda}/package.zip to S3..."
              aws s3 cp lambda-functions/${lambda}/package.zip s3://$S3_BUCKET/lambda-packages/${lambda}/package.zip
            else
              echo "‚úÖ No changes in ${lambda}, skipping build and upload."
            fi
          done

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: terraform
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: terraform
        run: terraform destroy -auto-approve
